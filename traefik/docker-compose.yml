version: "3.9"

services:
  meshcentral:
    container_name: meshcentral
    image: ghcr.io/ylianst/meshcentral:latest
    volumes:
      - ./meshcentral/data:/opt/meshcentral/meshcentral-data
      # where file uploads for users live
      - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
      # location for the meshcentral-backups - this should be mounted to an external storage
      - ./meshcentral/backup:/opt/meshcentral/meshcentral-backup
      # location for site customization files
      - ./meshcentral/web:/opt/meshcentral/meshcentral-web
    ports:
      - 8086:4430
    networks:
      - meshcentral-tier
      - web
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true" # Tells Traefik to proxy this container
      - "traefik.http.routers.mesh-web.rule=Host(`mesh.kentare.no`)" # Domain name for http rule
      - "traefik.http.routers.mesh-web.entrypoints=web" # Define the entrypoint for http
      - "traefik.http.routers.mesh-web.middlewares=redirect@file" # This is the  middleware to redirect to https
      - "traefik.http.routers.mesh-secured.rule=Host(`mesh.kentare.no`)" # Domain name for  https rule
      - "traefik.http.routers.mesh-secured.entrypoints=web-secured" # Define the entrypoint for https
      - "traefik.http.routers.mesh-secured.service=mesh-secured" # Define new service named mesh secured on the route
      - "traefik.http.services.mesh-secured.loadbalancer.server.port=4430" # Tell traefik explicitly to use port 4430, traefik did not do this automatically in this case.
      - "traefik.http.routers.mesh-secured.tls.certresolver=mytlschallenge" # How to create certs
    restart: always

  mongodb:
    container_name: mongodb
    image: mongo:latest
    env_file:
      - .env
    volumes:
      - ./meshcentral/mongodb_data:/data/db
    networks:
      - meshcentral-tier
    restart: always

  traefik:
    container_name: traefik
    image: traefik:latest
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # Volume for docker admin
      - ./dynamic.yaml:/dynamic.yaml # Volume for dynamic conf file, **ref: line 14
    ports:
      - 80:80
      - 443:443
    networks:
      - web
    command:
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # Set docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # You need to whitelist containers that will be exposed to traefik
      - --providers.file.filename=/dynamic.yaml # Referring to the https upgrade middleware file
      - --providers.docker.network=web # Use the docker network web for communication between traefik and containser
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # Define an entrypoint for port :80 named web (this can be whatever)
      - --entrypoints.web-secured.address=:443 # Define an entrypoint for https on port :443 named web-secured (this can be whatever)
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
      - --certificatesresolvers.mytlschallenge.acme.email=test@email.com # Your email
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
    restart: always
    depends_on:
      - meshcentral

networks:
  meshcentral-tier:
    driver: bridge
  web:
    external: true
